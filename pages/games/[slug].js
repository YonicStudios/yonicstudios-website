import Link from "next/link"
import Head from "next/head"
import { MDXProvider } from "@mdx-js/react"
import { MDXRemote } from "next-mdx-remote"
import { motion } from "framer-motion"

import { getAllArticlesByType, getArticleBySlug } from "../../lib/mdx"

export default function Game({article}) {
    const components = {
        Link: props => <Link href={props.href}><a>{props.children}</a></Link>,
    }

    const variants = {
        hidden: { opacity: 0 },
        visible: { opacity: 1 }
    }

    return (
        <motion.div transition={{duration: 0.5}} initial="hidden" animate="visible" exit="hidden" variants={variants}>
            <Head>
                <title>Games | YonicStudios</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <h1>Game sample</h1>
            <MDXProvider components={components}>
                <MDXRemote {...article}/>
            </MDXProvider>
            <Link href="/games"><a>Back to games list</a></Link>
        </motion.div>
    )
}

export async function getStaticPaths() {
    const files = await getAllArticlesByType('games');
    const metadata = await Promise.all(files.map(async (file) => {
        const { frontmatter } = await getArticleBySlug('games', file);
        return frontmatter;
    }));
    const paths = metadata.map(article => ({ params: { slug: article.slug } }));
    return {
        paths,
        fallback: false
    }
}

export async function getStaticProps({ params }) {
    return {
        props: {
            article: await getArticleBySlug('games', params.slug + '.mdx')
        }
    }
}